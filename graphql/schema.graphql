type User {
    id: ID!
    name: String
}

type Thread {
    id: ID!
    title: String!
    comments: [Comment]!
}

type Comment {
    id: ID!
    user: ID!
    text: String!
    replies: [Reply]!
}

type Reply {
    id: ID!
    user: ID!
    text: String!
}

interface MutationResponse {
    code: String!
    success: Boolean!
    message: String!
}

type addUserResponse implements MutationResponse{
    code: String!
    success: Boolean!
    message: String!
    user: User
}

type Query{
    thread(id: ID!): Thread
    user(id: ID!): User
}

type Mutation{
    addUser(name: String!): addUserResponse!
}
